.f = ~ {
variable_name <- .x
variable_data <- data_no_lags[[variable_name]]
result <- pruebe_pp(variable_data)
result <- result %>% mutate(Variable = variable_name)
return(result)
}
)
return(results)
}
preubas_estacionariedad <- pruebe_pp_all(data_mod)
preubas_estacionariedad
plot_evol <- function(data, cov, response, date_col = "Periodo") {
#data <-  data %>% select(all_of())
ggplot(data, aes_string(x = date_col)) +
geom_line(aes_string(y = cov, color = "'cov'"), size = 1) +
geom_line(aes_string(y = response, color = "'Response'"), size = 1) +
scale_color_manual(
values = c("cov" = "darkblue", "Response" = "darkred"),
labels = c("cov" = cov, "Response" = response)
) +
theme_bw() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(face = "bold", size = 9),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 11, family = "Times New Roman"),
panel.grid.major = element_line(color = "gray", linetype = "solid"),
panel.grid.minor = element_blank(),
text = element_text(family = "Times New Roman")
) +
labs(
x = "Date",
y = "Values",
title = paste("Evolucion de", cov, "y", response)
)
}
plot_all_evol <- function(data, response, date_col = "Periodo", rem_lags=T) {
covars <- data %>% select(-all_of(c(response, date_col))) %>% names
if (rem_lags) {
covars <- covars[!grepl("^L[0-9]+", covars)]
}
plots <- list()
for (cov in covars) {
plots[[cov]] <- plot_evol(data, cov, response, date_col)
}
return(plots)
}
plot_all_evol(data_no %>%
mutate(d1_tc_real = tipo_cambio_real/lag(tipo_cambio_real)-1) %>%
select(-tipo_cambio_real),
'd1_tc_real')
read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220')
read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220')
ata_exp_tc <- read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220') %>%
rename(Periodo = ...1, Expect_d1_tc = `A 6 meses`) %>%
mutate(
month = str_extract(Periodo, "^[^/]+"),
year = str_extract(Periodo, "\\d{4}$"),
month_num = month_mapping[month],
Periodo = ymd(str_c(year, "-", month_num, "-01"))
) %>%
select(-month, -year, -month_num) %>%
mutate(Expect_tc = Expect_tc/100)
data_exp_tc <- read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220') %>%
rename(Periodo = ...1, Expect_d1_tc = `A 6 meses`) %>%
mutate(
month = str_extract(Periodo, "^[^/]+"),
year = str_extract(Periodo, "\\d{4}$"),
month_num = month_mapping[month],
Periodo = ymd(str_c(year, "-", month_num, "-01"))
) %>%
select(-month, -year, -month_num) %>%
mutate(Expect_tc = Expect_tc/100)
data_exp_tc <- read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220') %>%
rename(Periodo = ...1, Expect_d1_tc = `A 6 meses`) %>%
mutate(
month = str_extract(Periodo, "^[^/]+"),
year = str_extract(Periodo, "\\d{4}$"),
month_num = month_mapping[month],
Periodo = ymd(str_c(year, "-", month_num, "-01"))
) %>%
select(-month, -year, -month_num) %>%
mutate(Expect_d1_tc = Expect_d1_tc/100)
data_cfnai <- read_csv('../data/CFNAI.csv') %>% rename(Periodo = DATE) %>%
mutate(CFNAI=CFNAI/100) %>%
mutate(CFNAI = ifelse(CFNAI == 0, 0.01, CFNAI)) %>%
mutate(d1_CFNAI = CFNAI/lag(CFNAI)-1)
month_mapping <- c(
"Enero" = "01", "Febrero" = "02", "Marzo" = "03", "Abril" = "04",
"Mayo" = "05", "Junio" = "06", "Julio" = "07", "Agosto" = "08",
"Septiembre" = "09", "Octubre" = "10", "Noviembre" = "11", "Diciembre" = "12"
)
data_exp_tc <- read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220') %>%
rename(Periodo = ...1, Expect_d1_tc = `A 6 meses`) %>%
mutate(
month = str_extract(Periodo, "^[^/]+"),
year = str_extract(Periodo, "\\d{4}$"),
month_num = month_mapping[month],
Periodo = ymd(str_c(year, "-", month_num, "-01"))
) %>%
select(-month, -year, -month_num) %>%
mutate(Expect_d1_tc = Expect_d1_tc/100)
data2 <- list(data, data_exp_tc, data_cfnai) %>% reduce(full_join) %>%
arrange(Periodo) %>% filter(year(Periodo)>2000)
#data sin los indices, tipo nominab y con rezagos
indices <- c("IPC", "IMAE", "IPPM", "IPPS", "IPC_US", 'CFNAI')
data_no <- data2 %>% select(-any_of(indices)) %>% select(-tipo_cambio)
data_no <- data_no %>%
add_rezagos(data_no %>% select(-Periodo) %>% names(), 3) %>%
filter(2004<=year(Periodo))
#avriables del modelo
data_mod <- data_no %>% na.omit()
data_mod
pruebe_pp <- function(variable) {
pp_deriva <- ur.pp(variable, type = "Z-alpha", model = "constant")
p_deriva <- 1 - pnorm(abs(pp_deriva@teststat))
pp_tendencia <- ur.pp(variable, type = "Z-alpha", model = "trend")
p_tendencia <- 1 - pnorm(abs(pp_tendencia@teststat))
data.frame(
Modelo = c("Deriva", "Tendencia"),
`P-val` = c(p_deriva, p_tendencia)
)
}
pruebe_pp_all <- function(data, date_col = "Periodo") {
data_no_lags <- data %>% select(-matches("^L[0-9]+"), -all_of(date_col))
results <- map_dfr(
.x = names(data_no_lags),
.f = ~ {
variable_name <- .x
variable_data <- data_no_lags[[variable_name]]
result <- pruebe_pp(variable_data)
result <- result %>% mutate(Variable = variable_name)
return(result)
}
)
return(results)
}
preubas_estacionariedad <- pruebe_pp_all(data_mod)
preubas_estacionariedad
get_histog_var <- function(df, var){
df <- df %>% select(!!sym(var)) %>% na.omit()
v_y <- df %>% pull(!!sym(var))
bw <- 2 * IQR(v_y) / length(v_y)^(1/3)
bw <- ifelse(bw==0, 30, bw)
n_barras <- ceiling((max(v_y)-min(v_y))/bw)
max_barra <-
map_dbl(1:(n_barras-1), ~min(v_y)+.x*bw) %>%
map_dbl(~length(v_y[.x-bw<v_y&v_y<=.x])) %>%
max()
max_density <- max(density(v_y)$y)
factor <- max_barra/max_density
histog <-
ggplot(df, aes(x = !!sym(var)))+
geom_histogram(aes(y = ..count..), binwidth = bw,
fill = "cornflowerblue", color = "black", position = "identity") +
geom_density(aes(y = ..density.. * factor),
color = "darkblue", fill = "cornflowerblue", alpha = 0.5) +
labs(title = str_c("DistribuciÃ³n de ", var))+
xlab(var)+
theme_bw() +
theme(plot.title = element_text(face = "bold", size = 12),
text = element_text(family = "Times New Roman"),
axis.ticks = element_line(colour = "grey70", linewidth = 0.3),
panel.grid.major = element_line(colour = "grey70", linewidth = 0.3),
panel.grid.minor = element_line(colour = "grey70", linewidth = 0.2)) +
scale_y_continuous(name = "Conteo", sec.axis = sec_axis(~./factor, name = "Densidad"))
histog
}
histogramas <- get_histog_all(data_no)
histogramas
plot_corrs <- haga_plot_corrs2(data_no, var_y = 'tipo_cambio_real', group_lags = T)
plot_corrs
plot_all_evol(data_no %>%
mutate(d1_tc_real = tipo_cambio_real/lag(tipo_cambio_real)-1) %>%
select(-tipo_cambio_real),
'd1_tc_real')
pruebe_pp <- function(variable) {
pp_deriva <- ur.pp(variable, type = "Z-alpha", model = "constant")
p_deriva <- 1 - pnorm(abs(pp_deriva@teststat))
pp_tendencia <- ur.pp(variable, type = "Z-alpha", model = "trend")
p_tendencia <- 1 - pnorm(abs(pp_tendencia@teststat))
data.frame(
Modelo = c("Deriva", "Tendencia"),
`P-val` = c(p_deriva, p_tendencia)
)
}
pruebe_pp_all <- function(data, date_col = "Periodo") {
data_no_lags <- data %>% select(-matches("^L[0-9]+"), -all_of(date_col))
results <- map_dfr(
.x = names(data_no_lags),
.f = ~ {
variable_name <- .x
variable_data <- data_no_lags[[variable_name]]
result <- pruebe_pp(variable_data)
result <- result %>% mutate(Variable = variable_name)
return(result)
}
)
return(results)
}
preubas_estacionariedad <- pruebe_pp_all(data_mod)
preubas_estacionariedad
#avriables del modelo
data_mod <- data_no %>% na.omit() %>% select(-matches("^L[0-9]+"))
data_mod
library(ardl)
library(ARDL)
install.packages('ARDL')
data_mod
library(ARDL)
?ARDL
data_mod
auto_ardl(tipo_cambio_real~., data_mod)
auto_ardl(tipo_cambio_real~., data_mod, max_order=4)
auto_ardl(tipo_cambio_real~, data_mod, max_order=4)
auto_ardl(tipo_cambio_real ~, data_mod, max_order=4)
auto_ardl(tipo_cambio_real ~., data_mod, max_order=4)
data_mod
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
covs
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(predictors, collapse = " + "))
)
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=4)
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
mod_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=4)
mod_ardl
bounds_f_test(mod_ardl)
data_mod
data2 <- list(data, data_exp_tc, data_cfnai) %>% reduce(full_join) %>%
arrange(Periodo) %>% filter(year(Periodo)>2000) %>%
mutate(dif_tasas = TBP-Tasa_USA)
data2
data_cfnai <- read_csv('../data/CFNAI.csv') %>% rename(Periodo = DATE) %>%
mutate(CFNAI=CFNAI/100) %>%
mutate(CFNAI = ifelse(CFNAI == 0, 0.01, CFNAI)) %>%
mutate(d1_CFNAI = CFNAI/lag(CFNAI)-1)
month_mapping <- c(
"Enero" = "01", "Febrero" = "02", "Marzo" = "03", "Abril" = "04",
"Mayo" = "05", "Junio" = "06", "Julio" = "07", "Agosto" = "08",
"Septiembre" = "09", "Octubre" = "10", "Noviembre" = "11", "Diciembre" = "12"
)
data_exp_tc <- read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220') %>%
rename(Periodo = ...1, Expect_d1_tc = `A 6 meses`) %>%
mutate(
month = str_extract(Periodo, "^[^/]+"),
year = str_extract(Periodo, "\\d{4}$"),
month_num = month_mapping[month],
Periodo = ymd(str_c(year, "-", month_num, "-01"))
) %>%
select(-month, -year, -month_num) %>%
mutate(Expect_d1_tc = Expect_d1_tc/100)
data2 <- list(data, data_exp_tc, data_cfnai) %>% reduce(full_join) %>%
arrange(Periodo) %>% filter(year(Periodo)>2000) %>%
mutate(dif_tasas = TBP-Tasa_US)
#data sin los indices, tipo nominab y con rezagos
indices <- c("IPC", "IMAE", "IPPM", "IPPS", "IPC_US", 'CFNAI')
data_no <- data2 %>% select(-any_of(indices)) %>% select(-tipo_cambio)
data_no <- data_no %>%
add_rezagos(data_no %>% select(-Periodo) %>% names(), 3) %>%
filter(2004<=year(Periodo))
histogramas <- get_histog_all(data_no)
histogramas
plot_corrs <- haga_plot_corrs2(data_no, var_y = 'tipo_cambio_real', group_lags = T)
plot_corrs
plot_evol <- function(data, cov, response, date_col = "Periodo") {
#data <-  data %>% select(all_of())
ggplot(data, aes_string(x = date_col)) +
geom_line(aes_string(y = cov, color = "'cov'"), size = 1) +
geom_line(aes_string(y = response, color = "'Response'"), size = 1) +
scale_color_manual(
values = c("cov" = "darkblue", "Response" = "darkred"),
labels = c("cov" = cov, "Response" = response)
) +
theme_bw() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(face = "bold", size = 9),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 11, family = "Times New Roman"),
panel.grid.major = element_line(color = "gray", linetype = "solid"),
panel.grid.minor = element_blank(),
text = element_text(family = "Times New Roman")
) +
labs(
x = "Date",
y = "Values",
title = paste("Evolucion de", cov, "y", response)
)
}
plot_all_evol <- function(data, response, date_col = "Periodo", rem_lags=T) {
covars <- data %>% select(-all_of(c(response, date_col))) %>% names
if (rem_lags) {
covars <- covars[!grepl("^L[0-9]+", covars)]
}
plots <- list()
for (cov in covars) {
plots[[cov]] <- plot_evol(data, cov, response, date_col)
}
return(plots)
}
plot_all_evol(data_no %>%
mutate(d1_tc_real = tipo_cambio_real/lag(tipo_cambio_real)-1) %>%
select(-tipo_cambio_real),
'd1_tc_real')
#avriables del modelo
data_mod <- data_no %>% na.omit() %>% select(-matches("^L[0-9]+"))
pruebe_pp <- function(variable) {
pp_deriva <- ur.pp(variable, type = "Z-alpha", model = "constant")
p_deriva <- 1 - pnorm(abs(pp_deriva@teststat))
pp_tendencia <- ur.pp(variable, type = "Z-alpha", model = "trend")
p_tendencia <- 1 - pnorm(abs(pp_tendencia@teststat))
data.frame(
Modelo = c("Deriva", "Tendencia"),
`P-val` = c(p_deriva, p_tendencia)
)
}
pruebe_pp_all <- function(data, date_col = "Periodo") {
data_no_lags <- data %>% select(-matches("^L[0-9]+"), -all_of(date_col))
results <- map_dfr(
.x = names(data_no_lags),
.f = ~ {
variable_name <- .x
variable_data <- data_no_lags[[variable_name]]
result <- pruebe_pp(variable_data)
result <- result %>% mutate(Variable = variable_name)
return(result)
}
)
return(results)
}
preubas_estacionariedad <- pruebe_pp_all(data_mod)
preubas_estacionariedad
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
mods_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=4)
bounds_f_test(mod_ardl)
bounds_f_test(mods_ardl$best_model)
mods_ardl$best_model
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
mods_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=2)
mods_ardl$best_model
#bounds_f_test(mods_ardl$best_model, case = )
data_mod
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
mods_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=1)
mods_ardl$best_model
#bounds_f_test(mods_ardl$best_model, case = )
data_mod
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
mods_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=1)
mods_ardl$best_model
#bounds_f_test(mods_ardl$best_model, case = )
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
mods_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=4)
mods_ardl$best_model
#bounds_f_test(mods_ardl$best_model, case = )
bounds_f_test(mods_ardl$best_model, case = 2)
bounds_f_test(mods_ardl$best_model, case = 1)
bounds_f_test(mods_ardl$best_model, case = 3)
bounds_f_test(mods_ardl$best_model, case = 4)
bounds_f_test(mods_ardl$best_model, case = 5)
data_cfnai <- read_csv('../data/CFNAI.csv') %>% rename(Periodo = DATE) %>%
mutate(CFNAI=CFNAI/100) %>%
mutate(CFNAI = ifelse(CFNAI == 0, 0.01, CFNAI)) %>%
mutate(d1_CFNAI = CFNAI/lag(CFNAI)-1)
month_mapping <- c(
"Enero" = "01", "Febrero" = "02", "Marzo" = "03", "Abril" = "04",
"Mayo" = "05", "Junio" = "06", "Julio" = "07", "Agosto" = "08",
"Septiembre" = "09", "Octubre" = "10", "Noviembre" = "11", "Diciembre" = "12"
)
data_exp_tc <- read_excel('../data/expectativas tipo de cambio.xlsx', range='A5:B220') %>%
rename(Periodo = ...1, Expect_d1_tc = `A 6 meses`) %>%
mutate(
month = str_extract(Periodo, "^[^/]+"),
year = str_extract(Periodo, "\\d{4}$"),
month_num = month_mapping[month],
Periodo = ymd(str_c(year, "-", month_num, "-01"))
) %>%
select(-month, -year, -month_num) %>%
mutate(Expect_d1_tc = Expect_d1_tc/100)
data2 <- list(data, data_exp_tc, data_cfnai) %>% reduce(full_join) %>%
arrange(Periodo) %>% filter(year(Periodo)>2000) %>%
mutate(dif_tasas = log(TBP)-log(Tasa_US))
#data sin los indices, tipo nominab y con rezagos
indices <- c("IPC", "IMAE", "IPPM", "IPPS", "IPC_US", 'CFNAI')
data_no <- data2 %>% select(-any_of(indices)) %>% select(-tipo_cambio)
data_no <- data_no %>%
add_rezagos(data_no %>% select(-Periodo) %>% names(), 3) %>%
filter(2004<=year(Periodo))
#avriables del modelo
data_mod <- data_no %>% na.omit() %>% select(-matches("^L[0-9]+"))
library(ARDL)
covs <- setdiff(names(data_mod), c("tipo_cambio_real", 'Periodo'))
formula <- as.formula(
paste("tipo_cambio_real ~", paste(covs, collapse = " + "))
)
mods_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=4)
mods_ardl$best_model
bounds_f_test(mods_ardl$best_model, case = 5)
mods_ardl <- auto_ardl(formula, data_mod %>% select(-'Periodo'), max_order=3)
mods_ardl$best_model
bounds_f_test(mods_ardl$best_model, case = 5)
bounds_f_test(mods_ardl$best_model, case = 4)
bounds_f_test(mods_ardl$best_model, case = 3)
mods_ardl$best_model
bounds_f_test(mods_ardl$best_model, case = 3)
bounds_f_test(mods_ardl$best_model, case = 2)
bounds_f_test(mods_ardl$best_model, case = 1)
bounds_f_test(mods_ardl$best_model, case = 2)
data_mod
data_mod_names
data_mod %>% names
library(ARDL)
mods_ardl <- auto_ardl(
~ dif_tasas+Expect_d1_tc | Inflacion+Inflacion_US+d1_CFNAI+d1_IMAE+d1_IPPM+d1_IPPS,
data_mod,
max_order=3)
data_mod %>% names
library(ARDL)
data_mod %>% names
mods_ardl <- auto_ardl(
tipo_cambio_real ~ dif_tasas+Expect_d1_tc |Inflacion+Inflacion_US+d1_CFNAI+
d1_IMAE+d1_IPPM+d1_IPPS,
data_mod,
max_order=3)
mods_ardl$best_model
bounds_f_test(mods_ardl$best_model, case = 2)
mods_ardl$best_model
bounds_f_test(mods_ardl$best_model, case = 2)
best_ardl <- mods_ardl$best_model
tseries::jarque.bera.test(best_ardl$residuals)
jb
jb_test <- tseries::jarque.bera.test(best_ardl$residuals)
diagnostique <- function(mod_arima, lags, alpha=0.05){
auto_LjungBox <- map_dbl(1:lags,~Box.test(mod_arima$residuals,
lag = .x,
type = "Ljung-Box")$p.value)
heter_white <- map_dbl(1:lags, ~white.test(ts(mod_arima$residuals,
frequency = 4),
lag = .x)$p.value)
jarque_bera <- jarque.bera.test(mod_arima$residuals)
shapiro <- shapiro.test(mod_arima$residuals)
output <- data.frame(rezagos=1:lags,
LjungBox=auto_LjungBox,
autocorr=ifelse(auto_LjungBox>alpha, "NO HAY", "Si hay"),
white=heter_white,
heteros=ifelse(heter_white>alpha, "NO HAY", "Si hay"),
jarque=jarque_bera$p.value,
shapiro=shapiro$p.value
)
output
}
diagnostique(best_ardl)
jb
jb_test <- tseries::jarque.bera.test(best_ardl$residuals)
jb
jb_test
bp_test <- bptest(best_ardl$residuals)
library(tseries)
bp_test <- bptest(best_ardl$residuals)
library(lmtest)
bp_test <- bptest(best_ardl$residuals)
bp_test <- bptest(best_ardl)
bp_test
cointegratoin_test <- bounds_f_test(mods_ardl$best_model, case = 2)
cointegration_test <- bounds_f_test(mods_ardl$best_model, case = 2)
cointegration_test
jb_test
bp_test
cointegration_test
best_ardl
coint_eq(best_ardl)
coint_eq(best_ardl, case =2)
plot_lr(best_ardl, coint_eq(best_ardl, case =2))
best_ardl
cointegration_test
